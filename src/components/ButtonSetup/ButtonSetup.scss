@import '../../scss/animations.scss';
@import '../../scss/colors.scss';

.button-setup-container {
  display: flex;
  flex-wrap: wrap;

  >h1 {
    width: 100%;
    display: inline-flex;
    align-items: center;
  }

  .button-settings-block {
    flex: 7;

    h3 {
      color: $blueberry;
    }

    .settings-items-container {
      -ms-box-orient: horizontal;
      display: -webkit-box;
      display: -moz-box;
      display: -ms-flexbox;
      display: -moz-flex;
      display: -webkit-flex;
      display: flex;
      -webkit-flex-wrap: wrap;
      flex-wrap: wrap;

      .settings-item {
        width: 125px;
        cursor: pointer;
        margin: 10px 10px 0 0;
        padding: 15px 10px;
        border: 1px solid #D0E1F9;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;

        &.selected {
          border-bottom: solid 3px $blueberry;
        }
      }
    }
  }

  .button-preview-block {
    flex: 3;

    .preview-button {
      background-color: $blueberry;
      color: white;
      font-family: "Work Sans","HelveticaNeue","Helvetica Neue",sans-serif;
      height: 44px;
      width: 343px;
    }
  }
}

.button-preview-block {
  .pulse {
    @include animate(pulse, 0.6s, infinite, alternate);
  }

  .pulse-grow {
    @include animate(pulse-grow, 0.6s, infinite, alternate);
  }

  .pulse-shrink {
    @include animate(pulse-shrink, 0.6s, infinite, alternate);
  }

  .rotate {
    @include animate(rotate, 0.6s, infinite, alternate);
  }

  .rotate-right {
    @include animate(rotate-right, 0.6s, infinite, alternate);
  }

  .rotate-left {
    @include animate(rotate-left, 0.6s, infinite, alternate);
  }

  .bounce {
    @include animate(bounce, 0.6s, infinite, alternate);
  }

  .bounce-top {
    @include animate(bounce-top, 0.6s, infinite, alternate);
  }

  .bounce-bottom {
    @include animate(bounce-bottom, 0.6s, infinite, alternate);
  }

  .buzz {
    @include animate(buzz, 0.15s, infinite, alternate);
  }

  .skew {
    @include animate(skew, 0.5s, infinite, alternate);
  }

  .skew-right {
    @include animate(skew-right, 0.3s, infinite, alternate);
  }

  .skew-left {
    @include animate(skew-left, 0.3s, infinite, alternate);
  }
}